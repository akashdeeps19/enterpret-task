{"version":3,"sources":["queryBuilder.ts","Filter.tsx","FilterBox.tsx","QueryBuild.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FilterBuilder","fields","conditionForFields","conditionMapping","valueForFields","rule","this","field","condition","value","type","criteria","GroupFilter","ruleGroup","children","conjunction","not","push","length","addFilter","child","getQueryRule","opMap","query","i","getQueryString","Filter","props","useState","selectedField","setSelectedField","classn","classo","className","name","onChange","val","filter","target","hidden","map","key","setCondition","setValue","keys","FilterBox","filts","gf","filters","setFilters","and","setAnd","setNot","toggleAnd","onClick","splice","_","handleDelete","fill","xmlns","x","y","width","height","viewBox","d","filt","QueryBuild","gfs","setGfs","setQuery","addGroupFilter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64038a76.chunk.js","sourcesContent":["export interface Rule {\n    field?: string \n    condition: string\n    value?: string\n    type: 'rule'\n}\n\nexport interface RuleGroup {\n  children: (RuleGroup | Rule)[]\n  conjunction: 'AND' | 'OR'\n  not: boolean\n  type: 'rule_group'\n}\n\nexport class FilterBuilder{\n    rule: Rule;\n    fields: string[];\n    conditionForFields: {[key: string]: string[]};\n    conditionMapping: {[key: string]: string};\n    valueForFields: {[key: string]: string[]};\n\n    constructor(fields: string [], conditionForFields: {[key: string]: string[]}, conditionMapping: {[key: string]: string}, valueForFields: {[key: string]: string[]}){\n        this.fields = fields;\n        this.conditionForFields = conditionForFields;\n        this.conditionMapping = conditionMapping;\n        this.valueForFields = valueForFields;\n        this.rule = {field: '',condition : 'default',value:'', type : 'rule'};\n    }\n\n    setCondition(field: string): string[]{\n        if(field in this.conditionMapping)\n            return this.conditionForFields[field];\n        return this.conditionForFields['default'];\n    }\n\n    setValue(field: string): string[]{\n        if(field in this.valueForFields)\n            return this.valueForFields[field];\n        return this.valueForFields['default'];\n    }\n\n    getQueryString(){\n        return `${this.rule.field}  ${this.conditionMapping[this.rule.condition]}  ${this.rule.value}`;\n    }\n\n    setQueryRule(field: string, condition: string, criteria: string){\n        this.rule.field = field;\n        this.rule.condition = condition;\n        this.rule.value = criteria;\n    }\n\n    getQueryRule(){\n        return this.rule;\n    }\n}\n\nexport class GroupFilter{\n    ruleGroup: RuleGroup;\n    fields: string[];\n    conditionForFields: {[key: string]: string[]};\n    conditionMapping: {[key: string]: string};\n    valueForFields: {[key: string]: string[]};\n    children: (FilterBuilder | GroupFilter)[];\n\n    constructor(fields: string [], conditionForFields: {[key: string]: string[]}, conditionMapping: {[key: string]: string}, valueForFields: {[key: string]: string[]}){\n        this.fields = fields;\n        this.conditionForFields = conditionForFields;\n        this.conditionMapping = conditionMapping;\n        this.valueForFields = valueForFields;\n        this.ruleGroup = {children: [], conjunction: 'AND', not: false, type : 'rule_group'};\n        this.children = [];\n    }\n\n    addGroupFilter(){\n        this.children.push(new GroupFilter(this.fields, this.conditionForFields, this.conditionMapping, this.valueForFields));\n        (this.children[this.children.length-1] as GroupFilter).addFilter();\n        return this.children[this.children.length-1]\n    }\n    addFilter(){\n        this.children.push(new FilterBuilder(this.fields, this.conditionForFields, this.conditionMapping, this.valueForFields));\n        return this.children[this.children.length-1]\n    }\n\n    getQueryRule(){\n        this.ruleGroup.children = [];\n        for(let child of this.children){\n            this.ruleGroup.children.push(child.getQueryRule())\n        }\n        return this.ruleGroup;\n    }\n\n    getQueryString(){\n        this.getQueryRule()\n        let opMap = {'AND' : '&&', 'OR' : '||'};\n        let query = this.ruleGroup.not?\"!(\":\"(\";\n        for(let i = 0;i < this.children.length-1;i++){\n            query += `${this.children[i].getQueryString()}  ${opMap[this.ruleGroup.conjunction]} `;\n        }\n        query += this.children[this.children.length-1].getQueryString() + ')';\n        return query;\n    }\n}","import React, { useState } from 'react';\nimport './App.css';\nimport { FilterBuilder } from './queryBuilder';\n\ninterface Props {\n    filter: FilterBuilder;\n}\n\nfunction Filter(props :Props) {\n    let [selectedField, setSelectedField] = useState('default');\n    let classn = \"w-1/4 p-2 m-5 bg-gray-500\";\n    let classo = \"p-2\";\n    // console.log(props.filter)\n    return (\n        <div className=\"flex justify-center m-5 text-white rounded bg-gray-600 shadow-lg\">\n            <select className={classn} name = 'Field' onChange = {(val) => {\n                props.filter.rule.field = val.target.value;\n                setSelectedField(val.target.value);}\n            }>\n            <option className = {classo} hidden>Select Field</option>\n            {\n                props.filter.fields.map((val, key) => \n                <option className = {classo} key={key}>{val}</option> )\n            }\n            </select>\n            <select className={classn} name = 'Condition' onChange = {(val) => {\n                props.filter.rule.condition = val.target.value;}\n            }>\n            <option className = {classo} hidden>Select Condition</option>\n            {\n                props.filter.setCondition(selectedField).map((val, key) => \n                <option className = {classo} key={key}>{val}</option> )\n            }\n            </select>\n            <select className={classn} name = 'Criteria' onChange = {(val) => {\n                props.filter.rule.value = val.target.value;}\n            }>\n            <option className = {classo} hidden>Select Criteria</option>\n            {\n                props.filter.setValue(selectedField).map((val, key) => \n                <option className = {classo} key={key}>{val}</option> )\n            }\n            </select>\n        </div>\n    );\n}\n\nexport default Filter;\n","import React, { useState } from 'react';\n\nimport Filter from './Filter';\nimport { FilterBuilder, GroupFilter } from './queryBuilder';\n\ninterface Props {\n  gf: GroupFilter;\n}\n\ninterface FilterElement {\n  filter: FilterBuilder;\n  key: number;\n}\nlet keys = 0;\nfunction FilterBox(props: Props) {\n  let filts :FilterElement[] = [];\n  for(let i = 0;i < props.gf.children.length;i++){\n    filts.push({filter: props.gf.children[i] as FilterBuilder, key:keys++})\n  }\n  let [filters, setFilters] = useState(filts);\n  let [and, setAnd] = useState(true)\n  let [not, setNot] = useState(false)\n\n  let handleClick = ()=>{\n    let filt = props.gf.addFilter() as FilterBuilder;\n    setFilters([...filters, {filter: filt, key: keys++}]);\n    // console.log(props.gf.children, filters)\n  }\n  let toggleAnd = ()=>{\n    props.gf.ruleGroup.conjunction = and?'OR':'AND';\n    setAnd(!and)\n  }\n  let toggleNot = ()=>{\n    props.gf.ruleGroup.not = !not;\n    setNot(!not)\n  }\n  let handleDelete = (key:number)=>{\n    if(filters.length === 1)\n      return;\n    props.gf.children.splice(key,1);\n    setFilters(filters.filter((_,i) => i !== key));\n  }\n  return (\n    <div className=\"flex-col justify-center m-2 p-2 bg-gray-800 text-white\">\n      <div className=\"flex justify-start\">\n        <span><button className={not?\"bg-indigo-600 p-1 mr-4\":\"p-1 mr-4\"} onClick={toggleNot}>NOT</button></span>\n        <span><button className={and?\"bg-indigo-600 p-1\":\"p-1\"} onClick = {toggleAnd}> AND </button></span>\n        <span><button className={and?\"p-1\":\"bg-indigo-600 p-1\"} onClick = {toggleAnd}> OR </button></span>\n      </div>\n      {\n        filters.map((val, key) => \n          <div key = {val.key} className=\"flex items-center\">\n              <Filter filter = {val.filter}></Filter>\n              {filters.length!==1 && <button className = \"bg-gray-500 h-10 p-2\" onClick={() => handleDelete(key)}>\n              <svg fill=\"#ffffff\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                width=\"16\" height=\"16\"\n                viewBox=\"0 0 24 24\">\n                  <path d=\"M 10 2 L 9 3 L 3 3 L 3 5 L 4.109375 5 L 5.8925781 20.255859 L 5.8925781 20.263672 C 6.023602 21.250335 6.8803207 22 7.875 22 L 16.123047 22 C 17.117726 22 17.974445 21.250322 18.105469 20.263672 L 18.107422 20.255859 L 19.890625 5 L 21 5 L 21 3 L 15 3 L 14 2 L 10 2 z M 6.125 5 L 17.875 5 L 16.123047 20 L 7.875 20 L 6.125 5 z\">\n                  </path>\n                </svg>\n              </button>}\n          </div>\n        )\n      }\n      <div className=\"flex justify-start\">\n        <button className=\"p-2 bg-indigo-600 rounded\" onClick = {handleClick}>+ Add Filter</button>\n      </div>\n    </div>\n  );\n}\n\nexport default FilterBox;","import React, { useState } from 'react';\nimport FilterBox from './FilterBox';\nimport {GroupFilter } from './queryBuilder';\n\ninterface Props {\n    gf: GroupFilter;\n}\n\ninterface GFilterElement {\n    filter: GroupFilter;\n    key: number;\n  }\n\nlet keys = 0;\nfunction QueryBuild(props: Props) {\n    let filts :GFilterElement[] = [];\n    for(let i = 0;i < props.gf.children.length;i++){\n        filts.push({filter: props.gf.children[i] as GroupFilter, key:keys++})\n    }\n    \n    let [gfs, setGfs] = useState(filts);\n    let [query, setQuery] = useState('Query');\n    let [and, setAnd] = useState(true);\n    let [not, setNot] = useState(false)\n\n    let toggleAnd = ()=>{\n        props.gf.ruleGroup.conjunction = and?'OR':'AND';\n        setAnd(!and)\n    }\n    let toggleNot = ()=>{\n        props.gf.ruleGroup.not = !not;\n        setNot(!not)\n    }\n    let handleDelete = (key:number)=>{\n        if(gfs.length === 1)\n            return;\n        props.gf.children.splice(key,1);\n        setGfs(gfs.filter((_,i) => i !== key));\n      }\n    return (\n        <div className=\"flex-col bg-gray-900 text-white p-5 m-6 rounded\">\n            <div className=\"flex justify-center bg-indigo-600 w-full p-2 mb-4\">\n                <p>{query}</p>\n            </div>\n            <div className=\"flex justify-center\">\n                <button className=\"p-2 bg-indigo-600 rounded\" onClick = {()=>{\n                    setQuery(props.gf.getQueryString())\n                }}>Build</button>\n            </div>\n            <div className=\"flex justify-start\">\n                <span><button className={not?\"bg-indigo-600 p-1 mr-4\":\"p-1 mr-4\"} onClick={toggleNot}>NOT</button></span>\n                <span><button className={and?\"bg-indigo-600 p-1\":\"p-1\"} onClick = {toggleAnd}> AND </button></span>\n                <span><button className={and?\"p-1\":\"bg-indigo-600 p-1\"} onClick = {toggleAnd}> OR </button></span>\n            </div>\n            <div className=\"flex justify-center \">\n                <div className=\"flex-col justify-center\">\n                    {\n                        gfs.map((val, key) => \n                            <div key = {val.key} className=\"flex\">\n                            <FilterBox gf = {val.filter}></FilterBox>\n                            {gfs.length!==1 && <button className = \"bg-gray-800 mt-2 h-10 p-2\" onClick={() => handleDelete(key)}>\n                            <svg fill=\"#ffffff\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                                width=\"12\" height=\"12\"\n                                viewBox=\"0 0 24 24\">\n                                <path d=\"M 10 2 L 9 3 L 3 3 L 3 5 L 4.109375 5 L 5.8925781 20.255859 L 5.8925781 20.263672 C 6.023602 21.250335 6.8803207 22 7.875 22 L 16.123047 22 C 17.117726 22 17.974445 21.250322 18.105469 20.263672 L 18.107422 20.255859 L 19.890625 5 L 21 5 L 21 3 L 15 3 L 14 2 L 10 2 z M 6.125 5 L 17.875 5 L 16.123047 20 L 7.875 20 L 6.125 5 z\">\n                                </path>\n                                </svg>\n                            </button>\n                            }\n                            </div>)\n                    }  \n\n                </div>\n            </div>\n            <div className=\"flex justify-start\">\n                <button className=\"p-2 bg-indigo-600 rounded\" onClick = {()=>{\n                    let filt = props.gf.addGroupFilter() as GroupFilter;\n                    setGfs([...gfs, {filter: filt, key: keys++}])\n                }}>+ Add Group Filter</button>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default QueryBuild;\n\n\n\n\n\n","import React from 'react';\nimport './App.css';\nimport { GroupFilter } from './queryBuilder';\nimport QueryBuild from './QueryBuild';\n// import { FilterBuilder } from './queryBuilder';\n\nfunction App() {\n  let fields = ['Theme', 'Sub-theme', 'Reason', 'Language', 'Source', 'Rating', 'Time Period', 'Customer ID'];\n\n  let conditionForFields = {'Theme' : ['Equals', 'Does not equal', 'Greater', 'Lesser', 'Is', 'Is not'],\n                              'default' : ['Equals', 'Does not equal', 'Greater', 'Lesser', 'Is', 'Is not']}\n\n  let conditionMapping = {'Equals' : '==',\n                          'Does not equal' : '!=',\n                          'Is' : '===',\n                          'Is not' : '!==',\n                          'Greater' : '>',\n                          'Lesser' : '<'\n                        }\n\n  let valueForFields = {'Theme' : ['performance', 'offer'],\n                      'Sub-theme' : ['efficieny', 'platform'],\n                      'default' : ['value1', 'value2']}\n  \n  let gf = new GroupFilter(fields, conditionForFields, conditionMapping, valueForFields);\n  gf.addGroupFilter();\n  return (\n    <div className=\"App\">\n      <h1 className=\"m-6 text-xl\">Query Builder</h1>\n      <div className=\"flex justify-center items-center w-3/5 m-auto\">\n        <QueryBuild gf={gf}></QueryBuild>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}